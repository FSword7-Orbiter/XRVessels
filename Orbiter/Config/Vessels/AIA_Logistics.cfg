; === Configuration file for standard 20-ft XR Payload Cargo container ===
; Copyright 2007-2018 Douglas Beachy
; http://www.alteaaerospace.com
ClassName = AIA_Logistics
MeshName = XRPayload\AIA_Logistics
Size = 3.867
Mass = 11300 ; empty mass [kg] : max recommended mass=12000
MaxFuel = 0  ; max fuel mass [kg]
CameraOffset = 0.0 .0 0.0
CW = 0.194 0.189 0.470
LiftFactor = 0.0
CrossSections = 7.060448  7.060448  14.769404 
EnableFocus = true
TouchdownPoints = 0 -1.296 3.024  -1.217 -1.296 -3.024    1.217 -1.296 -3.024

;----------------------------------------------------
; XR Payload custom parameters
;----------------------------------------------------

; must be set to 'true' for this vessel to be dockable in an XR-class payload bay.
XRPayloadEnabled = true

; cosmetic description; 127 chars MAX., but 40 chars or less recommended
Description = AIA Logistical Equipment

; Dimensions in meters: X (width) Y (height) Z(length).  This also determines how many standard payload slots are occupied.  
Dimensions = 2.43 2.59 6.09

; (OPTIONAL) Offset in meters from the center of the primary payload slot to the center of this payload's mass (X,Y,Z).
; If this is not set, the default is [0 0 0].  These coordinates are necessary so that the collision detection code can know the
; origin point (the "centerpoint") of the payload mass in order to determine how many slots this payload module will occupy.  
; If you adjust your attachment point coordinates to center this module in its primary payload slot, these coordinates 
; should be [0 0 0] (the default).  If your payload  is attached off-center in the slot along any axis, as will be the case 
; if your payload occupies more than one slot, you will need to adjust these coordinates accordingly.  
; For example, if your payload's center-of-mass is 0.3 meter below the centerpoint of its primary slot, this 
; value should be 0 -0.3 0.  As another example, if your payload is two slots long, one slot wide, and one slot high, 
; this value should  be set to 0 0 -3.048: the reason is that the center-of-mass of a 40-foot-long container is 3.048 meters 
; (1/2 slot) AFT of the ceterpoint of the primary slot (the forward of the two slots it occupies).
PrimarySlotCenterOfMassOffset = 0 0 0

; (OPTIONAL) If this is not specified, a default thumbnail is used.
; Path relative to Orbiter config directory (e.g., "C:\Orbiter\Config") to the bitmap thumbnail image for this payload.
; This is displayed on the payload panel when this cargo is selected.
; This should point to a 24-bit-color bitmap that is 154x77 pixels in size.
ThumbnailPath = Vessels\AIAlogistics.bmp

; (OPTIONAL): List of Orbiter vessel classnames for which an 'ExplicitAttachmentSlots' property is defined.
;VesselsWithExplicitAttachmentSlotsDefined = XR5Vanguard

; (OPTIONAL): These are optional parameters that only need to be defined for a given ship class if you have a 
; large or specially-shaped payload.  If no explicit attachment slots are defined, the ship will compute 
; which slots are valid for this payload based on its dimensions and the location of its attachment point.  
; If explicit attachment points *are* defined here they will override any calculations made by 
; the ship as to whether this object will fit in the bay when attached to a given slot.  However, 
; they do *not* override checks as to whether this object will fit alongside *other payload* in the 
; cargo bay.  Most payload objects will not need to define this value.
;
; Format is: <parent vessel classname>_ExplicitAttachmentSlots = # # # ...
;XR5Vanguard_ExplicitAttachmentSlots = 3 8 13 18 22 25 28 31 33 34 35 36  ; center slots on all three levels only for testing

;----------------------------------------------------

; === Attachment specs ===
; NOTE: a payload object's attachment point should be set for the CENTER of the bay slot into which it is 
; attached.  Each standard slot is exactly 2.4384 wide (X), 2.5908 high (Y), 6.096 long (Z).  Some XR-class
; ships, such as the XR5 Vanguard, have some slots that are wider as well.
; WARNING: attachment *direction* must be (0 1 0) and attachment *rotation* must be (0 0 1)!  The bay 
; collision detection code expects this.
; Also note that the XR attachment point *must* be labeled XRCARGO.
BEGIN_ATTACHMENT
P 0 0 0  0 1 0  0 0 1  XRCARGO
END_ATTACHMENT
